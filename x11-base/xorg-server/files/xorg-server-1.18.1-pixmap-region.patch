diff -uNr xorg-server-1.18.1-orig/randr/rrmonitor.c xorg-server-1.18.1/randr/rrmonitor.c
--- xorg-server-1.18.1-orig/randr/rrmonitor.c	2016-02-08 23:52:26.000000000 +0100
+++ xorg-server-1.18.1/randr/rrmonitor.c	2016-03-05 21:40:30.393344339 +0100
@@ -326,7 +326,7 @@
         RRMonitorSetFromClient(pScrPriv->monitors[list.client_primary], mon);
         mon++;
     } else if (list.server_primary >= 0) {
-        RRMonitorSetFromServer(pScrPriv->crtcs[list.server_primary], mon);
+        RRMonitorSetFromServer(list.server_crtc[list.server_primary], mon);
         mon++;
     }
 
@@ -354,8 +354,8 @@
 
     /* And finish with the list of crtc-inspired monitors
      */
-    for (c = 0; c < pScrPriv->numCrtcs; c++) {
-        RRCrtcPtr crtc = pScrPriv->crtcs[c];
+    for (c = 0; c < list.num_crtcs; c++) {
+        RRCrtcPtr crtc = list.server_crtc[c];
         if (c == list.server_primary && list.client_primary < 0)
             continue;
 
diff -uNr xorg-server-1.18.1-orig/randr/rroutput.c xorg-server-1.18.1/randr/rroutput.c
--- xorg-server-1.18.1-orig/randr/rroutput.c	2016-02-08 23:52:26.000000000 +0100
+++ xorg-server-1.18.1/randr/rroutput.c	2016-03-05 21:40:30.393344339 +0100
@@ -543,6 +543,7 @@
     WindowPtr pWin;
     rrScrPrivPtr pScrPriv;
     int ret;
+    ScreenPtr slave;
 
     REQUEST_SIZE_MATCH(xRRSetOutputPrimaryReq);
 
@@ -565,7 +566,18 @@
 
     pScrPriv = rrGetScrPriv(pWin->drawable.pScreen);
     if (pScrPriv)
+    {
         RRSetPrimaryOutput(pWin->drawable.pScreen, pScrPriv, output);
+        
+        xorg_list_for_each_entry(slave,
+                                 &pWin->drawable.pScreen->output_slave_list,
+                                 output_head) {
+            rrScrPrivPtr pSlavePriv;
+            pSlavePriv = rrGetScrPriv(slave);
+            
+            RRSetPrimaryOutput(slave, pSlavePriv, output);
+        }
+    }
 
     return Success;
 }
